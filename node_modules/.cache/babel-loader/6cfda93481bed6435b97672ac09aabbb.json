{"ast":null,"code":"import \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/timyang/front-end/front_end_project/personal-app-project/personal-app/src/components/InputItem/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport style from './index.module.less';\nconst InputItem = React.forwardRef((props, ref) => {\n  const {\n    name,\n    rules,\n    ...rest\n  } = props;\n  const [timing, setTiming] = useState(false); // start countdown?\n\n  const [count, setCount] = useState(props.countDown || 60); // countdown seconds\n\n  const handleClickCaptcha = () => {\n    _message.success('Get captcha 1234');\n\n    setTiming(true);\n  };\n\n  useEffect(() => {\n    let interval = 0;\n\n    if (timing) {\n      interval = window.setInterval(() => {\n        setCount(preSecond => {\n          if (preSecond <= 1) {\n            setTiming(false). // countdown ends\n            clearInterval(interval);\n            return props.countDown || 60;\n          }\n\n          return preSecond - 1;\n        });\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [timing, props.countDown]);\n\n  if (name === 'captcha') {\n    return /*#__PURE__*/React.createElement(_Form.Item, {\n      name: name,\n      rules: rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      gutter: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Input, Object.assign({}, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      className: style.getCaptcha,\n      disabled: timing,\n      size: \"large\",\n      onClick: handleClickCaptcha,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, timing ? `${count}second` : 'Get Captcha'))));\n  }\n\n  return /*#__PURE__*/React.createElement(_Form.Item, {\n    name: name,\n    rules: rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, Object.assign({\n    ref: ref\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })));\n});\nexport default InputItem;","map":{"version":3,"sources":["/Users/timyang/front-end/front_end_project/personal-app-project/personal-app/src/components/InputItem/index.js"],"names":["React","useState","useEffect","style","InputItem","forwardRef","props","ref","name","rules","rest","timing","setTiming","count","setCount","countDown","handleClickCaptcha","success","interval","window","setInterval","preSecond","clearInterval","getCaptcha"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAe,OAAGC;AAAlB,MAA2BJ,KAAjC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC,CAF+C,CAEF;;AAC7C,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,KAAK,CAACS,SAAN,IAAmB,EAApB,CAAlC,CAH+C,CAGY;;AAC3D,QAAMC,kBAAkB,GAAG,MAAM;AAC7B,aAAQC,OAAR,CAAgB,kBAAhB;;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,QAAQ,GAAG,CAAf;;AACA,QAAIP,MAAJ,EAAY;AACRO,MAAAA,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AAChCN,QAAAA,QAAQ,CAAEO,SAAD,IAAe;AACpB,cAAIA,SAAS,IAAI,CAAjB,EAAoB;AAChBT,YAAAA,SAAS,CAAC,KAAD,CAAT,EAAkB;AAClBU,YAAAA,aADA,CACcJ,QADd;AAEA,mBAAOZ,KAAK,CAACS,SAAN,IAAmB,EAA1B;AACH;;AACD,iBAAOM,SAAS,GAAG,CAAnB;AACH,SAPO,CAAR;AAQH,OATU,EASR,IATQ,CAAX;AAUH;;AACD,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACH,GAfQ,EAeN,CAACP,MAAD,EAASL,KAAK,CAACS,SAAf,CAfM,CAAT;;AAiBA,MAAIP,IAAI,KAAK,SAAb,EAAwB;AACpB,wBACI,0BAAM,IAAN;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,MAAM,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,8CAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ,eAII;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAEP,KAAK,CAACoB,UADrB;AAEI,MAAA,QAAQ,EAAEZ,MAFd;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAEK,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMML,MAAM,GAAI,GAAEE,KAAM,QAAZ,GAAsB,aANlC,CADJ,CAJJ,CADJ,CADJ;AAmBH;;AACD,sBACI,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAEL,IAAjB;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEF;AAAZ,KAAqBG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAKH,CApDiB,CAAlB;AAsDA,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Form, Button, Row, Col, message } from 'antd';\nimport style from './index.module.less'\n\nconst InputItem = React.forwardRef((props, ref) => {\n    const { name, rules, ...rest } = props;\n    const [timing, setTiming] = useState(false); // start countdown?\n    const [count, setCount] = useState(props.countDown || 60); // countdown seconds\n    const handleClickCaptcha = () => {\n        message.success('Get captcha 1234');\n        setTiming(true);\n    }\n\n    useEffect(() => {\n        let interval = 0;\n        if (timing) {\n            interval = window.setInterval(() => {\n                setCount((preSecond) => {\n                    if (preSecond <= 1) {\n                        setTiming(false). // countdown ends\n                        clearInterval(interval);\n                        return props.countDown || 60;\n                    }\n                    return preSecond - 1;\n                })\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [timing, props.countDown]);\n\n    if (name === 'captcha') {\n        return (\n            <Form.Item name={name} rules={rules}>\n                <Row gutter={8}>\n                    <Col span={16}>\n                        <Input {...rest} />\n                    </Col>\n                    <Col span={8}>\n                        <Button \n                            className={style.getCaptcha}\n                            disabled={timing}  \n                            size=\"large\"\n                            onClick={handleClickCaptcha}\n                        >\n                            { timing ? `${count}second` : 'Get Captcha' }\n                        </Button>\n                    </Col>\n                </Row>\n            </Form.Item>\n        )\n    }\n    return (\n        <Form.Item name={name} rules={rules}>\n            <Input ref={ref} {...rest} />\n        </Form.Item>\n    )\n});\n\nexport default InputItem;"]},"metadata":{},"sourceType":"module"}