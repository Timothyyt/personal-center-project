{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/popover/style/css\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/progress/style/css\";\nimport _Progress from \"antd/es/progress\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/timyang/front-end/front_end_project/personal-app-project/personal-app/src/pages/Register/index.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport InputItem from '../../components/InputItem';\nimport SubmitButton from \"../../components/SubmitButton\";\nimport styles from './index.module.less';\nconst passwordStatusMap = {\n  ok: /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"strength: strong\"),\n  pass: /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"strength: medium\"),\n  poor: /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"strength: weak\")\n};\nconst {\n  Option\n} = _Select;\nconst passwordProgressMap = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception'\n};\n\nconst Register = () => {\n  const [visible, setVisible] = useState(false);\n  const [popover, setPopover] = useState(false);\n  const [prefix, setPrefix] = useState('86');\n\n  const [form] = _Form.useForm();\n\n  const handleFinish = values => {\n    console.log(values);\n  };\n\n  const checkConfirm = (_, value) => {\n    const promise = Promise;\n\n    if (value && value !== form.getFieldValue('password')) {\n      return promise.reject('passwords do not match!');\n    }\n\n    return promise.resolve();\n  };\n\n  const getPasswordStatus = () => {\n    const value = form.getFieldValue('password');\n\n    if (value && value.length > 9) {\n      return 'ok';\n    }\n\n    if (value && value.length > 5) {\n      return 'pass';\n    }\n\n    return 'poor';\n  };\n\n  const checkPassword = (_, value) => {\n    const promise = Promise;\n\n    if (!value) {\n      setVisible(!!value);\n      return promise.reject('please input password');\n    }\n\n    if (!visible) {\n      setVisible(!!value);\n    }\n\n    setPopover(!popover);\n\n    if (value && form.getFieldValue('confirm')) {\n      form.validateFields(['confirm']);\n    }\n\n    return promise.resolve();\n  };\n\n  const renderPasswordProgress = () => {\n    const value = form.getFieldValue('password');\n    const passwordStatus = getPasswordStatus();\n    return value && value.length && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles[`progress-${passwordStatus}`],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Progress, {\n      className: styles.progress,\n      status: passwordProgressMap[passwordStatus],\n      strokeWidth: 6,\n      percent: value.length * 10 > 100 ? 100 : value.length * 10,\n      showInfo: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.registerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    onFinish: handleFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputItem, {\n    name: \"mail\",\n    placeholder: \"mailbox\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input mail!\"\n    }, {\n      type: 'email',\n      message: 'Please input mail with right format!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(_Popover, {\n    content: visible && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, passwordStatusMap[getPasswordStatus()], renderPasswordProgress(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, \"Please use at least 6 characters. Please avoid easy passwords.\")),\n    overlayStyle: {\n      width: 240\n    },\n    placement: \"right\",\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputItem, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"at least 6 characters\",\n    size: \"large\",\n    rules: [{\n      validator: checkPassword\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"confirm\",\n    type: \"password\",\n    placeholder: \"confirm password\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please confirm password\"\n    }, {\n      validator: checkConfirm\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    size: \"large\",\n    value: prefix,\n    onChange: value => setPrefix(value),\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"86\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"+86\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"+1\"))), /*#__PURE__*/React.createElement(_Col, {\n    span: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputItem, {\n    name: \"mobile\",\n    placeholder: \"phone number\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input phone number\"\n    }, {\n      pattern: /^\\d{11}$/,\n      message: \"Incorrect phone format!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"captcha\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: 'Please input captcha'\n    }],\n    placeholder: \"captcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(_Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"Use existing account to log in\"))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/timyang/front-end/front_end_project/personal-app-project/personal-app/src/pages/Register/index.js"],"names":["React","useState","Link","InputItem","SubmitButton","styles","passwordStatusMap","ok","success","pass","warning","poor","error","Option","passwordProgressMap","Register","visible","setVisible","popover","setPopover","prefix","setPrefix","form","useForm","handleFinish","values","console","log","checkConfirm","_","value","promise","Promise","getFieldValue","reject","resolve","getPasswordStatus","length","checkPassword","validateFields","renderPasswordProgress","passwordStatus","progress","registerContainer","register","required","message","type","width","validator","pattern"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport  { Link } from 'react-router-dom';\nimport { Form, Popover, Progress, Row, Select, Col } from 'antd';\nimport InputItem from '../../components/InputItem';\nimport SubmitButton from \"../../components/SubmitButton\";\nimport styles from './index.module.less';\n\nconst passwordStatusMap = {\n    ok: (\n        <div className={styles.success}>\n            strength: strong\n        </div>\n    ),\n    pass: (\n        <div className={styles.warning}>\n            strength: medium\n        </div>\n    ),\n    poor: (\n        <div className={styles.error}>\n            strength: weak\n        </div>\n    ),\n}\n\nconst { Option } = Select; \n\nconst passwordProgressMap = {\n    ok: 'success',\n    pass: 'normal',\n    poor: 'exception',\n}\n\nconst Register = () => {\n    const [visible, setVisible] = useState(false);\n    const [popover, setPopover] = useState(false);\n    const [prefix, setPrefix] = useState('86');\n    const [form] = Form.useForm();\n    const handleFinish = (values) => {\n        console.log(values);\n    }\n    const checkConfirm = (_, value) => {\n        const promise = Promise;\n        if (value && value !== form.getFieldValue('password')) {\n            return promise.reject('passwords do not match!');\n        }\n        return promise.resolve();\n    }\n\n    const getPasswordStatus = () => {\n        const value = form.getFieldValue('password');\n        if (value && value.length > 9) {\n            return 'ok';\n        }\n        if (value && value.length > 5) {\n            return 'pass';\n        }\n        return 'poor';\n    }\n    const checkPassword = (_, value) => {\n        const promise = Promise;\n        if (!value) {\n            setVisible(!!value);\n            return promise.reject('please input password')\n        }\n        if (!visible) {\n            setVisible(!!value);\n        }\n        setPopover(!popover);\n        if (value && form.getFieldValue('confirm')) {\n            form.validateFields(['confirm']);\n        }\n        return promise.resolve();\n    }\n\n    const renderPasswordProgress = () => {\n        const value = form.getFieldValue('password');\n        const passwordStatus = getPasswordStatus();\n        return value && value.length && (\n            <div className={styles[`progress-${passwordStatus}`]}>\n                <Progress\n                    className={styles.progress}\n                    status={passwordProgressMap[passwordStatus]}\n                    strokeWidth={6}\n                    percent={value.length * 10 > 100 ? 100 : value.length * 10}\n                    showInfo={false}\n                />\n            </div>\n        )\n    }\n\n    return (\n        <div className={styles.registerContainer}>\n            <div className={styles.register}>\n                <Form\n                    form={form}\n                    onFinish={handleFinish}\n                >\n                    <InputItem\n                        name=\"mail\"\n                        placeholder=\"mailbox\"\n                        size=\"large\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input mail!\"\n                            },\n                            {\n                                type: 'email',\n                                message: 'Please input mail with right format!'\n                            },\n                        ]}\n                    />\n                    <Popover\n                        content={\n                            visible && (\n                                <div>\n                                    {passwordStatusMap[getPasswordStatus()]}\n                                    {renderPasswordProgress()}\n                                    <div>\n                                        Please use at least 6 characters. Please avoid easy passwords.\n                                </div>\n                                </div>\n                            )\n                        }\n                        overlayStyle={{ width: 240 }}\n                        placement=\"right\"\n                        visible={true}\n\n                    >\n                        <InputItem\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"at least 6 characters\"\n                            size=\"large\"\n                            rules={[\n                                {\n                                    validator: checkPassword,\n                                }\n                            ]}\n                        />\n                    </Popover>\n                    <InputItem\n                        name=\"confirm\"\n                        type=\"password\"\n                        placeholder=\"confirm password\"\n                        size=\"large\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please confirm password\"\n                            },\n                            {\n                                validator: checkConfirm,\n                            }\n                        ]}\n                    />\n                    <Row>\n                        <Col span={6}>\n                            <Select\n                                size=\"large\"\n                                value={prefix}\n                                onChange={(value) => setPrefix(value)}\n                                style={{ width: '100%' }}\n                            >\n                                <Option value=\"86\">+86</Option>\n                                <Option value=\"1\">+1</Option>\n                            </Select>\n                        </Col>\n                        <Col span={18}>\n                            <InputItem\n                                name=\"mobile\"\n                                placeholder=\"phone number\"\n                                size=\"large\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input phone number\"\n                                    },\n                                    {\n                                        pattern: /^\\d{11}$/,\n                                        message: \"Incorrect phone format!\"\n\n                                    }\n                                ]}\n                            />\n                        </Col>\n                    </Row>\n                    <InputItem\n                        name=\"captcha\"\n                        size=\"large\"\n                        rules={[\n                             {\n                                 required: true,\n                                 message: 'Please input captcha'\n                             }\n                        ]}\n                        placeholder=\"captcha\"\n                    />\n                    <Row>\n                        <Col span={8}>\n                        <SubmitButton>Register</SubmitButton>\n                        </Col>\n                        <Col span={16}>\n                            <Link to=\"/login\">\n                                Use existing account to log in\n                            </Link>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}